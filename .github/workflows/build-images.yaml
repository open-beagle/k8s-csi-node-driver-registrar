name: Build Image

on:
  push:
    branches:
      - release-v2

env:
  BUILD_VERSION: v2.15.0

jobs:
  build-cache-and-push-images:
    name: Build cache and push images
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0
        with:
          image: tonistiigi/binfmt:qemu-v7.0.0-28

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v2
        with:
          registry: registry.cn-qingdao.aliyuncs.com
          username: ${{ secrets.REGISTRY_USER_ALIYUN }}
          password: ${{ secrets.REGISTRY_PASSWORD_ALIYUN }}

      - name: Checkout source
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0 

      - name: Cache Docker layers
        uses: actions/cache@v4.2.4
        with:
          path: /tmp/buildx-cache
          key: docker-cache-${{ github.ref_name }}

      - name: Clear cache
        run: |
          rm -rf /tmp/buildx-cache/*
          docker buildx prune -f

      - name: Short Version and set new env var
        id: short_v
        run: |
          BUILD_VERSION_SHORT=$(echo "${{ env.BUILD_VERSION }}" | sed -E 's/^v([0-9]+\.[0-9]+).*$/\1/')
          echo "BUILD_VERSION_SHORT=$BUILD_VERSION_SHORT" >> $GITHUB_ENV

      - name: Golang Build
        run: |
          docker run --rm -v ${{ github.workspace }}:/go/src/github.com/kubernetes-csi/node-driver-registrar \
            -w /go/src/github.com/kubernetes-csi/node-driver-registrar \
            -e BUILD_VERSION=${{ env.BUILD_VERSION }} \
            ghcr.io/${{ github.repository_owner }}/golang:1.24-alpine \
            bash .beagle/build.sh

      - name: Multi-arch build & push ${{ github.ref_name }} latest
        uses: docker/build-push-action@v6.18.0
        id: docker_build_cd
        with:
          provenance: false
          context: .
          file: .beagle/dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            BASE=alpine:3
            AUTHOR=${{ github.repository_owner }}
            VERSION=${{ env.BUILD_VERSION }}
          cache-to: type=local,dest=/tmp/buildx-cache-new,mode=max
          push: true
          tags: |
            registry.cn-qingdao.aliyuncs.com/wod/csi-node-driver-registrar:${{ env.BUILD_VERSION }}
            registry.cn-qingdao.aliyuncs.com/wod/csi-node-driver-registrar:${{ env.BUILD_VERSION_SHORT }}

      # 构建并推送 AMD64 架构镜像
      - name: Build and push AMD64 Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .beagle/dockerfile
          push: true
          tags: |
            registry.cn-qingdao.aliyuncs.com/wod/csi-node-driver-registrar:${{ env.BUILD_VERSION }}-amd64
            registry.cn-qingdao.aliyuncs.com/wod/csi-node-driver-registrar:${{ env.BUILD_VERSION_SHORT }}-amd64
          platforms: linux/amd64
          build-args: |
            BASE=alpine:3
            AUTHOR=${{ github.repository_owner }}
            VERSION=${{ env.BUILD_VERSION }}
          cache-from: type=local,src=/tmp/buildx-cache
          cache-to: type=local,dest=/tmp/buildx-cache-new,mode=max

      # 构建并推送 ARM64 架构镜像
      - name: Build and push ARM64 Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .beagle/dockerfile
          push: true
          tags: |
            registry.cn-qingdao.aliyuncs.com/wod/csi-node-driver-registrar:${{ env.BUILD_VERSION }}-arm64
            registry.cn-qingdao.aliyuncs.com/wod/csi-node-driver-registrar:${{ env.BUILD_VERSION_SHORT }}-arm64
          platforms: linux/arm64
          build-args: |
            BASE=alpine:3
            AUTHOR=${{ github.repository_owner }}
            VERSION=${{ env.BUILD_VERSION }}
          cache-from: type=local,src=/tmp/buildx-cache
          cache-to: type=local,dest=/tmp/buildx-cache-new,mode=max
